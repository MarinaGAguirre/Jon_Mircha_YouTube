/*
COMENTARIO en CSS:
La REGLA CSS tiene 2 partes:
1) El "Selector" (<select>)le indica al navegador qué elemento de
HTML se selecciona para aplicarles una regla que incluye los
valores de las propiedades CSS.que es una ETIQUETA html. 

2) Bloque de declaración: {
    atributo: valor;
    atributo-de-mas-de-dos-palabras: otro-valor;
}
Es IMPRESCINDIBLE el : y el ; para no tener errores de sintaxis.
*/
/*Eejemplo de declaración:Donde el selector es la etiqueta h1,
el bloque de declaraciones tiene los atributos de color, 
y background-colo.*/
h1{
    color:rgb(83, 83, 212);
    background-color: rgb(179, 180, 182);
    border-color: black;
    border-style: solid;
    text-align: center;
}


/* LINK DE REFERENCIA: 

🟢 Emmet.io - https://emmet.io/
🔵 Enlaces de la documentación de CSS:
  - https://es.wikipedia.org/wiki/Hoja_de...
  - https://www.w3.org/html/logo/
  - https://www.w3.org/standards/webdesig...
  - https://www.w3.org/TR/css-2020/
  - https://developer.mozilla.org/es/docs...
🔵 CSS Reference - https://cssreference.io/
🔵 Can I Use - https://caniuse.com/
🔵 Code Guide - https://codeguide.co/
🔵 Pseudoclases - https://developer.mozilla.org/es/docs...
🔵 Pseudoelementos - https://developer.mozilla.org/es/docs...
🔵 Propiedades hederables - https://web.dev/learn/css/inheritance...
🔵 Reset CSS - https://meyerweb.com/eric/tools/css/r...
🔵 Normalize CSS - https://necolas.github.io/normalize.css/
🔵 Autoprefixer CSS - https://autoprefixer.github.io/
🔵 Modelo de Caja - https://developer.mozilla.org/es/docs...
🔵 Tamaño de Caja Paul Irish - https://www.paulirish.com/2012/box-si...
🔵 960 Grid System - https://960.gs/
*/


/*HAY 3 FORMAS DE APLICAR ESTILOS EN CSS:

1) Aplicando "ESTILOS CON HOJA EXTERNA al documento"
   A través de LA ETIQUETA <link> esto es "BUENA PRÁCTICA" -->
   <link rel="stylesheet" href="CSS_YouTube.css">
2) Aplicando "ESTILOS EN LÍNEA" a través de <style> 
   La cursiva es por la etiqueta <i>.   El color y bold es por la etiqueta <style> -->
   <p><i style="font-weight: bold; color:gray">Cascading Style Sheets</i> - Hojas de estilo en cascada</p>

3) Aplicando "ESTILOS EN EL INTERIOR DEL DOCUMENTO"
   a través de <style> -->
   <style>
   h1{
    color:magenta;
   }
   </style>
  */ 

  /*MALA PRÁCTICA: IMPORTAR una HOJA DE ESTILO ESTERNA.
   @import url("http://www.colocamos-el-link@de-la-hoja-de-ruta.com");
   
   CUIDADO: ES UNA MALA PRÁCTICA. // Avoid @imports  //
   es preferible: 
   <!-- Use link elements -->
   <link rel="stylesheet" href="core.css">
  */

  /*  DECLARATION ORDER
  APROPIADAMENTE SE DEBE AGRUPAR ASÍ: 
  - Positioning
  - Box model
  - Typographic
  - Visual
  - Misc */

/* HAY 3 TIPOS DE SELECTORES
  (Selector es un elemento html al que le aplicaremos estilos CSS) 
  
A) Etiquetas (elementos HTML):
   USAR "ETIQUETAS" ES UNA MALA PRÁCTICA.
   Lo que le aplicamos a una se repite en todas
   las etiquetas del mismo tipo. POr ejemplo:
   Todas las etiquetas de párrafo (p) tendrán color: blue.*/
  p{
   color: black;
  }

/* B) Indentificadores / ID: Se accede con el atributo "ID".
   USAR ESTO ES UNA MALA PRÁCTICA.
 - Se considera un antipatrón dar "estilos" usando un ID.
 - Además tienen mayor peso sobre los demás selectores
  disponibles. por lo que NO se recomiendan su uso.*/
  #parrafo-dos {
    background-color: gray;
}

/* C) Clases: Se accede con el Atributo ".CLASS"
  USAR CLASS ES UNA BUENA PRÁCTICA. ES RECOMENDABLE.
  Permite reutilizar nuestro código CSS.
  IMPORTANTE: ORDENAR LAS CLASS EN ORDEN ALFABÉTICO
*/

.bg-skyblue {
  background-color:skyblue;
 }

.bg-steelblue {
  background-color: steelblue;
}

.text-20 {
   font-size: 20px;
}

.text-28 {
  font-size: 28px;
}

.text-white {
  color: white;
}

.hijos-directos > li {
  background-color: thistle;
}

.hijos-descendientes b {
 background-color: thistle;
}

.hermanos-general ~ li {
background-color: thistle;
}

.hermanos-adyacentes + li {
  background-color: thistle;
  }

/* Selectores de atributos: 
Se coloca entre corchetes el atributo al que se hará
referencia. Por ejemplo abajo decimos... 
A los enlaces que tengan un atributo href, aplicales
los siguientes estilo...
*/

.selectores-atributos a[href]{
  color: orangered;
}

/*Acá le decimos: cuando tengan el atributo target
y el valor blank, aplicales el estilo definido... */
.selectores-atributos a[target="_blank"]{
  font-weight: bold;
}

/* El comodín del * aplica el estilo i si contiene el
texto en cuestión en cualquier parte */

.selectores-atributos a[href*=jonmircha] {
  font-size: 22px;
}


/* El comodín del ^ aplica el estilo si contiene el texto en cuestión al inicio.
"text-decoration" es el subrayado que tiene los enlaces http */
.selectores-atributos a[href^="http://"] {
  text-decoration: none;
}

/* El comodín del $ aplica el estilo si contiene el texto en cuestión al final */
.selectores-atributos a[href$=".com"]{
  background-color: black;
}

/* El comodín del ~ aplica el estilo si contiene el texto en cuestión en una lista separada por espacios*/
.selectores-atributos a[class~="cursos"] {
  text-decoration: midnightblue;
}

/* El comodín del | aplica el estilo si contiene el texto en cuestión en
una lista separada por espacios y que luego del texto en cuestión tenga un
guión medio - */
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/* SELECTOR UNIVERSAL (*) 
Se aplica a todos los elementos del documento*/

*{
  font-family: sans-serif;
}

.selector-universal-contextual * {
  font-style: oblique;
}

/* Pseudoclases: es un selector que marca los elementos
que están en un estado específico. Dan estilo
dependiendo del contexto, posición o estado del 
elemento. Sintáxis:  

selector:pseudoclase { 
  propiedad:
  valor;
}
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes

Las PSEUDOCLASES COMIENZAN CON dos puntos :
/////ESTAS DE ABAJO SON PSEUDO CLASES PARA 
ELEMENTOS DE FORMULARIOS: ////////////////
*/

.form-pseudoclases *:required{  
  border-color: blue;
  border-bottom: 5;
  border-radius: 10px;
  justify-content: center;
  align-items: center;
  padding: 4px 26px 5px;
}

/* Cuandop la información del formulario sea válida
el borde se cambiará al color magenta*/

.form-pseudoclases *:valid {
  border-color: magenta;
}

/* Cuando la información del formulario sea inválida
el borde se cambiará al color red.

Así tanto invalid como valid trabajan según el atributo
required*/

.form-pseudoclases *:valid {
  border-color: red;
}

/* Cuando coloco el foco en cualquier elemento del formulario, 
el color del fondo se cambiará al color seleccionado. */

.form-pseudoclases *:focus {
  background-color: rgb(243, 166, 237);
}

/* En pseudo-clases el elemento :visited aplica cuando
ya se visitó un enlace. En este caso se podrá verde oliva. */

.menu-pseudoclases a:visited{
  color: olivedrab;
}


/*En la clase "menu-pseudoclase" hay un elemento "anchor"
o "ancla" <a> crea un enlace (link) a otras páginas. 
La pseudo-clase :hover aplica cuando se interactúa con un
elemento señalador. Es cuando se pasa con el ratón por
encima de un elemento. */

.menu-pseudoclases a:hover{
  color: orangered;
}


/* 
La Pseudo-clase :hover se aplica cuando el usuario 
interactúa con un elemento HTML con un dispositivo
señalador (mouse, cursor) sobre el elemento.
*/

.p-pseudoclase:hover {
  font-style: italic;
  font-size: 20px;
}

/* IMPORTANTE IMPORTANTE IMPORTANTE IMPORTANTE
//////////////////////////////////////////////
Cuando el elemento ID temario-css esté activo
(con el target activo) se cambiará el color de
fondo. con esto podemos hacer 

MENÚ BÁSICOS MÓVILES sin usar JavaScript */

#temario-css:target{
  background-color: rgb(218, 220, 223);
}

/* Ahora vamos a aplicra estilos por posición con

*/

.lista-pseudoclases li:first-child{
  color: green;
}

.lista-pseudoclases li:last-child{
  color:magenta;
}

/* La pseudo-clase "nth-child()" selecciona elementos
en un grupo de hermanos que coinciden con el patrón
especificado. Abajo es el elemento numero 3 de la lista */
.lista-pseudoclases li:nth-child(3){
  color:rgb(67, 35, 180);
}

/* La pseudo-clase "nth-child()" selecciona abajo
elemento de 2 en 2 para aplicar el estilo indicado.*/
.lista-pseudoclases li:nth-child(2n){
  font-family: Times New Roman;
}


/* La pseudo-clase "nth-child(3n)" selecciona abajo
elemento de 3 en 3 para aplicarle el estilo.*/
.lista-pseudoclases li:nth-child(3n){
  font-weight: bold;
}

/* La pseudo-clase "nth-child(3n + 1)" selecciona abajo
elemento de 3 en 3 más un elemento para aplicarle
el estilo "oblique".*/
.lista-pseudoclases li:nth-child(3n + 1){
  font-style: oblique;
}

/* La pseudo-clase "nth-child(even)" aplica ciertos estilos
para los elementos PARES=even y para los IMPARES=odd.*/

.lista-pseudoclases li:nth-child(even){
  background-color: rgb(194, 190, 190);
}

.lista-pseudoclases li:nth-child(odd){
  background-color: rgb(229, 138, 138);
}

/* con la Pseudo-clase :first-of-type indicamos que
aplique el estilo al primero del tipo párrafo "p"
el color indicado.*/

.articulo-pseudoclases p:first-of-type{
  background-color: rgb(220, 247, 240);
}

/* con la Pseudo-clase :last-of-type indicamos que
aplique el estilo al último del tipo párrafo "p"
el color indicado.*/

.articulo-pseudoclases p:last-of-type{
  background-color: rgb(240, 166, 166);
}

/* con la Pseudo-clase :nth-of-type indicamos que
aplique el estilo al último del tipo párrafo "p"
el color indicado.*/

.articulo-pseudoclases p:nth-last-of-type(2) {
  background-color: rgb(187, 172, 211);
}

/* con la Pseudo-clase asterisco (*) es el
selector universal (o sea todo los elementos) 
es la pseudo-clase en la que trabajamos, excepto
los párrafos que indicamos con :not(p)
*/

.articulo-pseudoclases *:not(p) {
  background-color: beige;
}

/* PSEUDO-ELEMENTOS: Se añaden a los selectores.
Sirven para aplicar estilos a partes más específicas
dentro de una etiqueta o elemento. Se emplea el ::
para diferenciarlos de las pseudo-clases. 
Sintaxis: selector::pseudo-elemento { propiedad: valor; }
::after
::before
::first-letter: 
::first-line: Selecciona solo la primera línea del
elemento especificado por el selector.
::selection
*/

/* Para el uso de la pseudo-pripiedad ::before y ::after 
es muy importante usar el ATRIBUTO "content" */
.saga-geminis::before{
  content: "👦";
}

.saga-geminis::after{
  content: "♊";
}

.saga-precio::before{
  content: "$";
  font-weight: bold;
}

.saga-precio::after{
  content:  " (dolares U.S.A)";
  font-weight: bold;
}

/* Para párrafos, div, encabezados, section, article, etc
aplican los pseudo-elementos ::first-letter y ::first-line */

.p-pseudo-elementos::first-letter{
  font-size: 32;
  font-weight: bold;
}

.p-pseudo-elementos::first-line{
color: darkblue;
}

.p-pseudo-elementos::selection{
  background: greenyellow;
  }

.input-pseudoelementos::placeholder{
  color:blue;
}

/* AGRUPANDO SELECTORES */

/* Para agrupar estilos del selector .form
podemos hacer lo siguiente empleando la coma ,  */

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="mail"],
.form-agrupar-selectores textarea {
  border-color: brown;
  border-width: 2px;
  border-radius: 5px;

  background-color: bisque;
  font-size: 20w;
  display: block;
  width: 300px; 
}

/* EL ALGORITMO DE CSS */

/* Es la forma en que el navegador aplica lños estilos
al documento HTML. Es IMPORTANTE ender cómo se aplican
y sobreescriben en ocasiones las reglas CSS.
1) La Cascada.
2) La especificidad.
3) La Herencia.
 */

/*1) LA CASCADA: El navegador aplica los estilos en el siguiente orden: 

     I) ORÍGEN DEL CÓDIGO:
        a) "User Agent Stylesheet" (Hoja de estilo del agente de usuario.
        b) "User stylesheets": Propias del usuario. Como aumentar el zoom, o oponerle un tema claso u oscuro.
        c) "Author stylesheets": Estilos del autor, son las que hacemos en las hojas CSS. Lo que hacen los developers...

     II) ESPECIFICIDAD DEL SELECTOR:
     Es el "peso" (importancia o valor) que tiene el selector que empleamos. Es la manera mediante la cual los navegadores deciden qué valores
     de una propiedad CSS son más relevantes para un elemento cuando hay conflictos de estilos. Así se calcula:

     Etiquetas y pseudo-elementos.........0,0,0,1
     Clases, atributos, pseudo-clases.....0,0,1,0
     Identificadores ID (.)...............0,1,0,0
     Estílos en línea.....................1,0,0,0
     !important............Rompe la especificidad

     II) ORDEN DE APARICIÓN. */
  
/* 2) LA HERENCIA: En CSS es el mecanismo mediante el cual determinadas propiedades de un elemento padre se transmiten a sus hijos.
      Por ejemplo, si para un elemento se le establece el color (color) y el tipo de letra (font-family), cada elemento que se
      encuentre dentro de él también se mostrará de ese color y con ese tipo de letra. 
      Lo que SÍ se hereda: Tipopgrafía, tamaño, familia tipográfica, color de font.
      Hay propiedades que no se heredan como el background.

*/


/*Aplicando ESTILOS a la ETIQUETA blockquote considerando la ESPECIFICIDAD de cada etiqueda, clase y ID. Donde hay que considerar NO sólo el
Orden de la Cascada, sino tb la especificidad  */

blockquote{
  background-color: darkblue;
  color: white;
}

/* El PESO ESPECÍFICO del ID que se indentifica con # es la GANADORA y la que prevalecerá (1,0,0) */
#cita-marco {
  background-color: green;
}

blockquote.cita-marco {
  background-color: tomato;
}

.cita-marco {
  background-color: cornflowerblue;
}

